<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c/c&#43;&#43; on 张不大的博客</title>
    <link>https://tutuwu2019.github.io/blog/c/c-/</link>
    <description>Recent content in c/c&#43;&#43; on 张不大的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright © 2024, zhangbdua.</copyright><atom:link href="https://tutuwu2019.github.io/blog/c/c-/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cpp_and_leecode</title>
      <link>https://tutuwu2019.github.io/cpp_and_leecode/</link>
      <pubDate>Wed, 15 May 2024 23:16:14 +0800</pubDate>
      
      <guid>https://tutuwu2019.github.io/cpp_and_leecode/</guid>
      <description>This is a page about »Cpp_and_leecode«.
leecode2589 你有一台电脑，它可以 同时 运行无数个任务。给你一个二维整数数组 tasks ， 其中 tasks[i] = [starti, endi, durationi] 表示第 i 个任务需要在 闭区间 时间段 [starti, endi] 内运行 durationi 个整数时间点（但不需要连续）。
当电脑需要运行任务时，你可以打开电脑，如果空闲时，你可以将电脑关闭。
请你返回完成所有任务的情况下，电脑最少需要运行多少秒。
示例 1： 输入：tasks = [[2,3,1],[4,5,1],[1,5,2]] 输出：2 解释： - 第一个任务在闭区间 [2, 2] 运行。 - 第二个任务在闭区间 [5, 5] 运行。 - 第三个任务在闭区间 [2, 2] 和 [5, 5] 运行。 电脑总共运行 2 个整数时间点。 示例 2： 输入：tasks = [[1,3,2],[2,5,3],[5,6,2]] 输出：4 解释： - 第一个任务在闭区间 [2, 3] 运行 - 第二个任务在闭区间 [2, 3] 和 [5, 5] 运行。 - 第三个任务在闭区间 [5, 6] 运行。 电脑总共运行 4 个整数时间点。 c++11以后还有c++17、c++20、c++21等新特性</description>
    </item>
    
    <item>
      <title>Lua_and_c_cpp</title>
      <link>https://tutuwu2019.github.io/lua_and_c_cpp/</link>
      <pubDate>Wed, 15 May 2024 18:55:31 +0800</pubDate>
      
      <guid>https://tutuwu2019.github.io/lua_and_c_cpp/</guid>
      <description>This is a page about »Lua_and_c_cpp«.
lua 我想，lua 能这么火，讲全世界最快的脚本 在游戏领域确实首屈一指 c + lua 好像，有人讲国内lua 的火，是云风点的
c/c++ 看似领域很多，但是每个领域又都有自己的护城河，一旦哪天被优化了，很大概率会有因为当初选c/c++ 这条路又骂自己一遍。为什么当初不把 java 给啃下去
lua 与 c/c++ 之间的合作 参考一下的链接就好了，如果还没有入门，那就去B站看看相关的视频
参考01 参考02 参考03 参考04 参考05 参考06 参考07 参考08 参考09 参考10 参考11 参考12 参考13 参考14</description>
    </item>
    
  </channel>
</rss>
